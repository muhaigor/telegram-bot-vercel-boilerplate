import { Context } from 'telegraf';
import { wordScheduler } from '../services/word-scheduler';

export const stats = () => {
  return async (ctx: Context) => {
    const userId = ctx.from?.id;
    const stats = wordScheduler.getStats();
    const isUserActive = userId ? wordScheduler.isUserActive(userId) : false;

    const statsMessage = `
üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞</b>

üë• –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <b>${stats.activeUsers}</b>
‚è±Ô∏è –ò–Ω—Ç–µ—Ä–≤–∞–ª –æ—Ç–ø—Ä–∞–≤–∫–∏: <b>${stats.intervalMs / 1000} —Å–µ–∫—É–Ω–¥</b>
üîÑ –í–∞—à —Å—Ç–∞—Ç—É—Å: <b>${isUserActive ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}</b>

${isUserActive 
  ? '‚úÖ –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –Ω–µ–º–µ—Ü–∫–∏–µ —Å–ª–æ–≤–∞' 
  : '‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—É—á–∞—Ç—å —Å–ª–æ–≤–∞'
}
    `;

    await ctx.reply(statsMessage, { parse_mode: 'HTML' });
  };
};
